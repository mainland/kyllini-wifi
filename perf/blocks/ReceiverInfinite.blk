-- 
-- Copyright (c) Microsoft Corporation
-- All rights reserved. 
--
-- Licensed under the Apache License, Version 2.0 (the ""License""); you
-- may not use this file except in compliance with the License. You may
-- obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT
-- LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR
-- A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
--
-- See the Apache Version 2.0 License for specific language governing
-- permissions and limitations under the License.
--
--

#include <externals.blk>
#include "../../receiver/cca/cca.blk"
#include "../../receiver/OFDM/LTS.blk"
#include "../../receiver/removeDC.blk"
#include "../../receiver/downSample.blk"
#include "../../receiver/OFDM/DataSymbol.blk"
#include "../../receiver/OFDM/FreqCompensation.blk"
#include "../../receiver/OFDM/FFT.blk"
#include "../../receiver/OFDM/ChannelEqualization.blk"
#include "../../receiver/OFDM/PilotTrack.blk"
#include "../../receiver/OFDM/GetData.blk"
#include "DecodeInfinite.blk"
#include "../../transmitter/crc.blk"



fun comp receiveBits(hinfo : struct HeaderInfo) {
    DecodeInfinite(hinfo) 
};

fun computeParams() {
   var params : struct LTECoeffs;

   for i in [0,64] {
      params.freqCoeffs[i] := complex16{re=1000; im=1000};
      params.channelCoeffs[i] := complex16{re=1000; im=1000};
   };
   return params
};

fun comp ReceiverInfinite(hinfo : struct HeaderInfo) {
  let params = computeParams();

  (downSample() 
       >>> DataSymbol(0) >>> FFT() >>> ChannelEqualization(params)
       >>> PilotTrack()
       >>> GetData() 
       >>> receiveBits(hinfo))
};
