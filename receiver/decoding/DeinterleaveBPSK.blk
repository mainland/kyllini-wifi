-- 
-- Copyright (c) Microsoft Corporation
-- All rights reserved. 
--
-- Licensed under the Apache License, Version 2.0 (the ""License""); you
-- may not use this file except in compliance with the License. You may
-- obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT
-- LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR
-- A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
--
-- See the Apache Version 2.0 License for specific language governing
-- permissions and limitations under the License.
--
--
#pragma once 

fun comp DeinterleaveBPSK() {

  var output:arr[48] int8;

  repeat seq{
    
     (symbol:arr[48] int8) <- takes 48;
    
     do {
                output[0] := symbol[0];
		output[1] := symbol[3];
		output[2] := symbol[6];
		output[3] := symbol[9];
		output[4] := symbol[12];
		output[5] := symbol[15];
		output[6] := symbol[18];
		output[7] := symbol[21];
		output[8] := symbol[24];
		output[9] := symbol[27];
		output[10] := symbol[30];
		output[11] := symbol[33];
		output[12] := symbol[36];
		output[13] := symbol[39];
		output[14] := symbol[42];
		output[15] := symbol[45];
		output[16] := symbol[1];
		output[17] := symbol[4];
		output[18] := symbol[7];
		output[19] := symbol[10];
		output[20] := symbol[13];
		output[21] := symbol[16];
		output[22] := symbol[19];
		output[23] := symbol[22];
		output[24] := symbol[25];
		output[25] := symbol[28];
		output[26] := symbol[31];
		output[27] := symbol[34];
		output[28] := symbol[37];
		output[29] := symbol[40];
		output[30] := symbol[43];
		output[31] := symbol[46];
		output[32] := symbol[2];
		output[33] := symbol[5];
		output[34] := symbol[8];
		output[35] := symbol[11];
		output[36] := symbol[14];
		output[37] := symbol[17];
		output[38] := symbol[20];
		output[39] := symbol[23];
		output[40] := symbol[26];
		output[41] := symbol[29];
		output[42] := symbol[32];
		output[43] := symbol[35];
		output[44] := symbol[38];
		output[45] := symbol[41];
		output[46] := symbol[44];
		output[47] := symbol[47];
     };

     emits output
    
  }

}
