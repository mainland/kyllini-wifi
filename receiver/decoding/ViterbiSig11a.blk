-- 
-- Copyright (c) Microsoft Corporation
-- All rights reserved. 
--
-- Licensed under the Apache License, Version 2.0 (the ""License""); you
-- may not use this file except in compliance with the License. You may
-- obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT
-- LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR
-- A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
--
-- See the Apache Version 2.0 License for specific language governing
-- permissions and limitations under the License.
--
--
#pragma once 

#include "../../const.blk"
#include <externals.blk>

fun comp ViterbiSig11a() {
  var nOutput:int16;
  var outViterbi:arr[96000] bit; 

  seq {
    (svalue:arr[48] int8) <- takes 48;
   
     do{
       nOutput := viterbiSig11a_brick_decode_fast(svalue, outViterbi);
       -- Here we get 32 bits but we are only interested in 24 PLCP bits
       -- Moreover, only 18 bits are correct, and the last 6 are random due to prefix
       -- The last 6 bits are reserved and set to 0 by WiFi for this reason
       outViterbi[18,6] := {'0,'0,'0,'0,'0,'0};
     };

     emits outViterbi[0,24];
  }
}

