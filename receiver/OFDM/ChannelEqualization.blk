-- 
-- Copyright (c) Microsoft Corporation
-- All rights reserved. 
--
-- Licensed under the Apache License, Version 2.0 (the ""License""); you
-- may not use this file except in compliance with the License. You may
-- obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT
-- LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR
-- A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
--
-- See the Apache Version 2.0 License for specific language governing
-- permissions and limitations under the License.
--
--
#pragma once 

#include "../../const.blk"
#include <externals.blk>


fun comp ChannelEqualization(params : struct LTECoeffs) {

   repeat seq {

    (fftdata_in:arr[64] complex16) <- takes 64;
    
--    do { println "fftdata_in: ", fftdata_in };

    var fftdata:arr[64] complex16;

    do{
      --fftdata := fftdata_in;
      fftdata[28,8] := fftdata_in[28,8];
      v_mul_complex16(fftdata[0,28], fftdata_in[0,28], params.channelCoeffs[0,28], norm_shift);
      v_mul_complex16(fftdata[36,28], fftdata_in[36,28], params.channelCoeffs[36,28], norm_shift);
    };

    emits fftdata
  }

}
