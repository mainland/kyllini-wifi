-- 
-- Copyright (c) Microsoft Corporation
-- All rights reserved. 
--
-- Licensed under the Apache License, Version 2.0 (the ""License""); you
-- may not use this file except in compliance with the License. You may
-- obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT
-- LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR
-- A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
--
-- See the Apache Version 2.0 License for specific language governing
-- permissions and limitations under the License.
--
--
#pragma once 

fun external permutatew1313(x:arr[4] complex16, y:arr[4] complex16) : ()


fun external interleave_loww(x:arr[4] complex16, y:arr[4] complex16, z:arr[4] complex16) : ()


fun interleave_aux(x:arr[4] complex16, y:arr[4] complex16) {
  var oup : arr[4] complex16;
  interleave_loww(x,y,oup);
  return oup
}

fun comp downSample() {

  var pi0:arr[4] complex16;
  var pi1:arr[4] complex16;

--  var oup:arr[4] complex16;
  
  repeat seq {
    (y:arr[8] complex16) <- takes 8;

--    do { println "took: ", y; }
 
    var tmp1:arr[4] complex16;
    var tmp2:arr[4] complex16;

    do {

      permutatew1313(y[0:3],tmp1);
      permutatew1313(y[4:7],tmp2);

      -- interleave_loww(tmp1,tmp2,oup)
    };
    emits interleave_aux(tmp1,tmp2)
  }


}
