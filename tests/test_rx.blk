-- 
-- Copyright (c) Microsoft Corporation
-- All rights reserved. 
--
-- Licensed under the Apache License, Version 2.0 (the ""License""); you
-- may not use this file except in compliance with the License. You may
-- obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT
-- LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR
-- A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
--
-- See the Apache Version 2.0 License for specific language governing
-- permissions and limitations under the License.
--
--

#include <bits.blk>
#include "../receiver/receiver.blk"

fun comp convert_to_int8() {
var ai : arr[1] int8;

  repeat {
    x<-takes 8;
    do{
      bits_to_int8(ai, x);
    }
    emits ai;
  }
}


-- cca_tufv waits for some idle time before detecting a packet
-- so we supply 1000 zero samples before sending the actual packet
fun comp append_idle() {
  times 1000 {
    emit complex16{re=0; im=0};
  }
  repeat{
    x<-take;
    emit x;
  }
}

let comp main = read >>> append_idle() >>> downSample() >>> receiver() >>> convert_to_int8() >>> write
